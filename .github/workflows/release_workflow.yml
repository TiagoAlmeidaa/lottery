name: Release Workflow

on:
  workflow_run:
    workflows: [Version Increment Workflow]
    types:
      - completed

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Setting up Java
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setting up APIs
        run: pip3 install google-api-python-client oauth2client

      - name: Grant gradlew permissions
        run: chmod +x gradlew

      - name: Decode google-services.json
        env:
          GOOGLE_JSON: ${{ secrets.GOOGLE_JSON }}
        run: echo $GOOGLE_JSON > app/google-services.json

      - name: Create cpp directory
        run: mkdir -p app/src/main/cpp

      - name: Decode native-lib
        env:
          NATIVE_LIB: ${{ secrets.NATIVE_LIB }}
        run: echo $NATIVE_LIB > app/src/main/cpp/native-lib.cpp

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Build release apk
        env:
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_STORE_KEY_ALIAS: ${{ secrets.ANDROID_STORE_KEY_ALIAS }}
          ANDROID_STORE_KEY_PASSWORD: ${{ secrets.ANDROID_STORE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload APK
        env:
          APP_RELEASE_OUTPUT_PATH: ${{ secrets.RELEASE_OUTPUT_PATH }}
          APP_PACKAGE_NAME: ${{ secrets.PACKAGE_NAME }}
          GOOGLE_PLAY_ANDROID_PUBLISHER: ${{ secrets.GOOGLE_PLAY_ANDROID_PUBLISHER }}
        run: |
          ls -lha app/build/outputs/apk/release
          echo $GOOGLE_PLAY_ANDROID_PUBLISHER > google_play_android_publisher.json
          python3 upload_app.py $APP_PACKAGE_NAME app/build/outputs/apk/release/

